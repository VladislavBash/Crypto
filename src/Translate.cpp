#include <string>
#include <map>
#include "Translate.hpp"

std::map<std::string, int> chooseMap(std::string lang) {
    std::map<std::string, int> m;
    if (lang == "rus") {
        m = {{"А",0}, {"Б",1}, {"В",2}, {"Г",3}, {"Д",4}, {"Е",5}, {"Ё",6}, {"Ж",7}, {"З",8}, {"И",9}, {"Й",10},
         {"К",11}, {"Л",12}, {"М",13}, {"Н",14}, {"О",15}, {"П",16}, {"Р",17}, {"С",18}, {"Т",19}, {"У",20}, {"Ф",21}, {"Х",22}, {"Ц",23}, {"Ч",24},
          {"Ш",25}, {"Щ",26}, {"Ы",27}, {"Ъ",28}, {"Ь",29}, {"Э",30}, {"Ю",31}, {"Я",32}};
    }
    if (lang == "eng") {
        m = {{"A",0}, {"B",1}, {"C",2}, {"D",3}, {"E",4}, {"F",5}, {"G",6}, {"H",7}, {"I",8}, {"J",9},
        {"K",10}, {"L",11}, {"M",12}, {"N",13}, {"O",14}, {"P",15}, {"Q",16}, {"R",17}, {"S",18}, {"T",19},
        {"U",20}, {"V",21}, {"W",22}, {"X",23}, {"Y",24}, {"Z",25}};
    }
    return m;
}

std::map<int, std::string> chooseUnMap(std::string lang) {
    std::map<int, std::string> m;
    if (lang == "rus") {
        m = {{0,"А"}, {1,"Б"}, {2,"В"}, {3,"Г"}, {4,"Д"}, {5,"Е"}, {6,"Ё"}, {7,"Ж"}, {8,"З"}, {9,"И"}, {10,"Й"}, {11,"К"},
         {12,"Л"}, {13,"М"}, {14,"Н"}, {15,"О"}, {16,"П"}, {17,"Р"}, {18,"С"}, {19,"Т"}, {20,"У"}, {21,"Ф"}, {22,"Х"},
          {23,"Ц"}, {24,"Ч"}, {25,"Ш"}, {26,"Щ"}, {27,"Ы"}, {28,"Ъ"}, {29,"Ь"}, {30,"Э"}, {31,"Ю"}, {32,"Я"}};
    }
    if (lang == "eng") {
        m = {{0,"A"}, {1,"B"}, {2,"C"}, {3,"D"}, {4,"E"}, {5,"F"}, {6,"G"}, {7,"H"}, {8,"I"}, {9,"J"},
        {10,"K"}, {11,"L"}, {12,"M"}, {13,"N"}, {14,"O"}, {15,"P"}, {16,"Q"}, {17,"R"}, {18,"S"}, {19,"T"},
        {20,"U"}, {21,"V"}, {22,"W"}, {23,"X"}, {24,"Y"}, {25,"Z"}};
    }
    return m;
}

int translate(std::string a, std::string lang) {
    static std::map<std::string, int> m = chooseMap(lang);
    return m.at(a);
}

std::string untranslate(int a, std::string lang) {
    static std::map<int, std::string> k = chooseUnMap(lang);
    return k.at(a);
}